// Code generated by protoc-gen-go. DO NOT EDIT.
// source: student.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StudentDTO struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TbName               string   `protobuf:"bytes,2,opt,name=tbName,proto3" json:"tbName,omitempty"`
	TbAge                int32    `protobuf:"varint,3,opt,name=tbAge,proto3" json:"tbAge,omitempty"`
	TbNumber             string   `protobuf:"bytes,4,opt,name=tbNumber,proto3" json:"tbNumber,omitempty"`
	TbSex                int32    `protobuf:"varint,5,opt,name=tbSex,proto3" json:"tbSex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudentDTO) Reset()         { *m = StudentDTO{} }
func (m *StudentDTO) String() string { return proto.CompactTextString(m) }
func (*StudentDTO) ProtoMessage()    {}
func (*StudentDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_student_0e1f82292cab4c4c, []int{0}
}
func (m *StudentDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudentDTO.Unmarshal(m, b)
}
func (m *StudentDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudentDTO.Marshal(b, m, deterministic)
}
func (dst *StudentDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudentDTO.Merge(dst, src)
}
func (m *StudentDTO) XXX_Size() int {
	return xxx_messageInfo_StudentDTO.Size(m)
}
func (m *StudentDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_StudentDTO.DiscardUnknown(m)
}

var xxx_messageInfo_StudentDTO proto.InternalMessageInfo

func (m *StudentDTO) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StudentDTO) GetTbName() string {
	if m != nil {
		return m.TbName
	}
	return ""
}

func (m *StudentDTO) GetTbAge() int32 {
	if m != nil {
		return m.TbAge
	}
	return 0
}

func (m *StudentDTO) GetTbNumber() string {
	if m != nil {
		return m.TbNumber
	}
	return ""
}

func (m *StudentDTO) GetTbSex() int32 {
	if m != nil {
		return m.TbSex
	}
	return 0
}

type BaseResponse struct {
	Code                 int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *StudentDTO `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BaseResponse) Reset()         { *m = BaseResponse{} }
func (m *BaseResponse) String() string { return proto.CompactTextString(m) }
func (*BaseResponse) ProtoMessage()    {}
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_student_0e1f82292cab4c4c, []int{1}
}
func (m *BaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResponse.Unmarshal(m, b)
}
func (m *BaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResponse.Marshal(b, m, deterministic)
}
func (dst *BaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResponse.Merge(dst, src)
}
func (m *BaseResponse) XXX_Size() int {
	return xxx_messageInfo_BaseResponse.Size(m)
}
func (m *BaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResponse proto.InternalMessageInfo

func (m *BaseResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *BaseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *BaseResponse) GetData() *StudentDTO {
	if m != nil {
		return m.Data
	}
	return nil
}

type PageInfo struct {
	PageNum              int32         `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize             int32         `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Size                 int32         `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	OrderBy              string        `protobuf:"bytes,4,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	StartRow             int32         `protobuf:"varint,5,opt,name=startRow,proto3" json:"startRow,omitempty"`
	EndRow               int32         `protobuf:"varint,6,opt,name=endRow,proto3" json:"endRow,omitempty"`
	Total                int64         `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	Pages                int32         `protobuf:"varint,8,opt,name=pages,proto3" json:"pages,omitempty"`
	List                 []*StudentDTO `protobuf:"bytes,9,rep,name=list,proto3" json:"list,omitempty"`
	FirstPage            int32         `protobuf:"varint,10,opt,name=firstPage,proto3" json:"firstPage,omitempty"`
	PrePage              int32         `protobuf:"varint,11,opt,name=prePage,proto3" json:"prePage,omitempty"`
	NextPage             int32         `protobuf:"varint,12,opt,name=nextPage,proto3" json:"nextPage,omitempty"`
	LastPage             int32         `protobuf:"varint,13,opt,name=lastPage,proto3" json:"lastPage,omitempty"`
	IsFirstPage          bool          `protobuf:"varint,14,opt,name=isFirstPage,proto3" json:"isFirstPage,omitempty"`
	IsLastPage           bool          `protobuf:"varint,15,opt,name=isLastPage,proto3" json:"isLastPage,omitempty"`
	HasPreviousPage      bool          `protobuf:"varint,16,opt,name=hasPreviousPage,proto3" json:"hasPreviousPage,omitempty"`
	HasNextPage          bool          `protobuf:"varint,17,opt,name=hasNextPage,proto3" json:"hasNextPage,omitempty"`
	NavigatePages        int32         `protobuf:"varint,18,opt,name=navigatePages,proto3" json:"navigatePages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_student_0e1f82292cab4c4c, []int{2}
}
func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (dst *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(dst, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *PageInfo) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PageInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PageInfo) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *PageInfo) GetStartRow() int32 {
	if m != nil {
		return m.StartRow
	}
	return 0
}

func (m *PageInfo) GetEndRow() int32 {
	if m != nil {
		return m.EndRow
	}
	return 0
}

func (m *PageInfo) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PageInfo) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *PageInfo) GetList() []*StudentDTO {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *PageInfo) GetFirstPage() int32 {
	if m != nil {
		return m.FirstPage
	}
	return 0
}

func (m *PageInfo) GetPrePage() int32 {
	if m != nil {
		return m.PrePage
	}
	return 0
}

func (m *PageInfo) GetNextPage() int32 {
	if m != nil {
		return m.NextPage
	}
	return 0
}

func (m *PageInfo) GetLastPage() int32 {
	if m != nil {
		return m.LastPage
	}
	return 0
}

func (m *PageInfo) GetIsFirstPage() bool {
	if m != nil {
		return m.IsFirstPage
	}
	return false
}

func (m *PageInfo) GetIsLastPage() bool {
	if m != nil {
		return m.IsLastPage
	}
	return false
}

func (m *PageInfo) GetHasPreviousPage() bool {
	if m != nil {
		return m.HasPreviousPage
	}
	return false
}

func (m *PageInfo) GetHasNextPage() bool {
	if m != nil {
		return m.HasNextPage
	}
	return false
}

func (m *PageInfo) GetNavigatePages() int32 {
	if m != nil {
		return m.NavigatePages
	}
	return 0
}

func init() {
	proto.RegisterType((*StudentDTO)(nil), "proto.StudentDTO")
	proto.RegisterType((*BaseResponse)(nil), "proto.BaseResponse")
	proto.RegisterType((*PageInfo)(nil), "proto.PageInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StudentServiceClient is the client API for StudentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StudentServiceClient interface {
	Get(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error)
	Insert(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error)
	Update(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error)
	GetList(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*PageInfo, error)
}

type studentServiceClient struct {
	cc *grpc.ClientConn
}

func NewStudentServiceClient(cc *grpc.ClientConn) StudentServiceClient {
	return &studentServiceClient{cc}
}

func (c *studentServiceClient) Get(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/proto.StudentService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) Insert(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/proto.StudentService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) Update(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*BaseResponse, error) {
	out := new(BaseResponse)
	err := c.cc.Invoke(ctx, "/proto.StudentService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetList(ctx context.Context, in *StudentDTO, opts ...grpc.CallOption) (*PageInfo, error) {
	out := new(PageInfo)
	err := c.cc.Invoke(ctx, "/proto.StudentService/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentServiceServer is the server API for StudentService service.
type StudentServiceServer interface {
	Get(context.Context, *StudentDTO) (*BaseResponse, error)
	Insert(context.Context, *StudentDTO) (*BaseResponse, error)
	Update(context.Context, *StudentDTO) (*BaseResponse, error)
	GetList(context.Context, *StudentDTO) (*PageInfo, error)
}

func RegisterStudentServiceServer(s *grpc.Server, srv StudentServiceServer) {
	s.RegisterService(&_StudentService_serviceDesc, srv)
}

func _StudentService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentDTO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StudentService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).Get(ctx, req.(*StudentDTO))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentDTO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StudentService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).Insert(ctx, req.(*StudentDTO))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentDTO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StudentService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).Update(ctx, req.(*StudentDTO))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentDTO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StudentService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetList(ctx, req.(*StudentDTO))
	}
	return interceptor(ctx, in, info, handler)
}

var _StudentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StudentService",
	HandlerType: (*StudentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _StudentService_Get_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _StudentService_Insert_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _StudentService_Update_Handler,
		},
		{
			MethodName: "GetList",
			Handler:    _StudentService_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "student.proto",
}

func init() { proto.RegisterFile("student.proto", fileDescriptor_student_0e1f82292cab4c4c) }

var fileDescriptor_student_0e1f82292cab4c4c = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xed, 0x6a, 0xdb, 0x3c,
	0x18, 0xad, 0x93, 0x38, 0x1f, 0x4f, 0x9a, 0xe4, 0xad, 0xde, 0x31, 0x44, 0x19, 0xc3, 0x98, 0x0d,
	0xfc, 0xab, 0x85, 0xec, 0x0a, 0x56, 0xc6, 0x4a, 0xa1, 0x64, 0xc5, 0xde, 0x2e, 0x40, 0x8e, 0x9f,
	0xba, 0x82, 0xc4, 0x0e, 0x92, 0x92, 0x65, 0x63, 0x37, 0xb2, 0x5b, 0xdb, 0xd5, 0x0c, 0x3d, 0x92,
	0xd2, 0xec, 0xeb, 0x47, 0x7f, 0x45, 0xe7, 0x3c, 0x5f, 0xe7, 0x9c, 0x18, 0x26, 0xda, 0x6c, 0x2b,
	0x6c, 0xcc, 0xc5, 0x46, 0xb5, 0xa6, 0x65, 0x31, 0xfd, 0xa4, 0xdf, 0x00, 0x0a, 0xc7, 0xbf, 0xfb,
	0xf8, 0x81, 0x4d, 0xa1, 0x23, 0x2b, 0x1e, 0x25, 0x51, 0xd6, 0xcd, 0x3b, 0xb2, 0x62, 0xcf, 0xa1,
	0x6f, 0xca, 0x85, 0x58, 0x23, 0xef, 0x24, 0x51, 0x36, 0xca, 0x3d, 0x62, 0xcf, 0x20, 0x36, 0xe5,
	0xdb, 0x1a, 0x79, 0x37, 0x89, 0xb2, 0x38, 0x77, 0x80, 0x9d, 0xc3, 0xd0, 0x94, 0x8b, 0xed, 0xba,
	0x44, 0xc5, 0x7b, 0xd4, 0x7f, 0xc0, 0x6e, 0xa2, 0xc0, 0x3d, 0x8f, 0xc3, 0x44, 0x81, 0xfb, 0x74,
	0x09, 0xa7, 0x57, 0x42, 0x63, 0x8e, 0x7a, 0xd3, 0x36, 0x1a, 0x19, 0x83, 0xde, 0xb2, 0xad, 0x90,
	0x14, 0xc4, 0x39, 0xbd, 0x19, 0x87, 0xc1, 0x1a, 0xb5, 0x16, 0x75, 0x10, 0x11, 0x20, 0x7b, 0x0d,
	0xbd, 0x4a, 0x18, 0x41, 0x22, 0xc6, 0xf3, 0x33, 0x67, 0xec, 0xe2, 0xd1, 0x4e, 0x4e, 0xe5, 0xf4,
	0x7b, 0x0f, 0x86, 0x77, 0xa2, 0xc6, 0x9b, 0xe6, 0xbe, 0xb5, 0xdb, 0x36, 0xa2, 0xc6, 0xc5, 0x76,
	0xed, 0x8f, 0x04, 0x68, 0xd5, 0xdb, 0x67, 0x21, 0xbf, 0xba, 0x43, 0x71, 0x7e, 0xc0, 0x56, 0x97,
	0xb6, 0xbc, 0xb3, 0x4b, 0x6f, 0xbb, 0xa9, 0x55, 0x15, 0xaa, 0xab, 0x2f, 0xde, 0x6c, 0x80, 0x76,
	0x93, 0x36, 0x42, 0x99, 0xbc, 0xfd, 0xec, 0xed, 0x1e, 0xb0, 0x4d, 0x14, 0x9b, 0xca, 0x56, 0xfa,
	0x54, 0xf1, 0x88, 0xf2, 0x69, 0x8d, 0x58, 0xf1, 0x01, 0x85, 0xef, 0x80, 0x65, 0xad, 0x06, 0xcd,
	0x87, 0x2e, 0x35, 0x02, 0xd6, 0xf7, 0x4a, 0x6a, 0xc3, 0x47, 0x49, 0xf7, 0x1f, 0xbe, 0x6d, 0x99,
	0xbd, 0x80, 0xd1, 0xbd, 0x54, 0xda, 0x58, 0xef, 0x1c, 0x68, 0xc1, 0x23, 0x41, 0x41, 0x28, 0xa4,
	0xda, 0xd8, 0x07, 0xe1, 0xa0, 0x95, 0xdf, 0xe0, 0xde, 0x8d, 0x9d, 0x3a, 0xf9, 0x01, 0xdb, 0xda,
	0x4a, 0xf8, 0x95, 0x13, 0x57, 0x0b, 0x98, 0x25, 0x30, 0x96, 0xfa, 0xfd, 0xe1, 0xe2, 0x34, 0x89,
	0xb2, 0x61, 0x7e, 0x4c, 0xb1, 0x97, 0x00, 0x52, 0xdf, 0x86, 0xf9, 0x19, 0x35, 0x1c, 0x31, 0x2c,
	0x83, 0xd9, 0x83, 0xd0, 0x77, 0x0a, 0x77, 0xb2, 0xdd, 0x6a, 0x6a, 0xfa, 0x8f, 0x9a, 0x7e, 0xa7,
	0xed, 0xad, 0x07, 0xa1, 0x17, 0x41, 0xe6, 0x99, 0xbb, 0x75, 0x44, 0xb1, 0x57, 0x30, 0x69, 0xc4,
	0x4e, 0xd6, 0xc2, 0x90, 0x2b, 0xcd, 0x19, 0xc9, 0xfd, 0x95, 0x9c, 0xff, 0x88, 0x60, 0xea, 0x83,
	0x2b, 0x50, 0xed, 0xe4, 0x12, 0xd9, 0x25, 0x74, 0xaf, 0xd1, 0xb0, 0x3f, 0x63, 0x3d, 0xff, 0xdf,
	0x53, 0xc7, 0x9f, 0x6c, 0x7a, 0xc2, 0xe6, 0xd0, 0xbf, 0x69, 0x34, 0xaa, 0x27, 0xce, 0x7c, 0xda,
	0x54, 0xc2, 0xe0, 0x13, 0x66, 0x2e, 0x61, 0x70, 0x8d, 0xe6, 0xd6, 0xfe, 0xb5, 0x7f, 0x19, 0x9a,
	0x79, 0x2a, 0x7c, 0xe9, 0xe9, 0x49, 0xd9, 0x27, 0xe6, 0xcd, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xee, 0xee, 0xaa, 0x2e, 0xfa, 0x03, 0x00, 0x00,
}
